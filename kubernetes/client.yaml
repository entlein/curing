apiVersion: v1
kind: ConfigMap
metadata:
  name: hyperdx-hdx-oss-v2-app-config
  labels:
    app: hyperdx-hdx-oss-v2-app-client
data:
  config.json: |
    {
      "server": {
        "host": "curing-server-service.cure.svc.cluster.local",
        "port": 8888
      },
      "connect_interval_sec": 90,
      "groups": ["kubernetes", "monitoring"],
      "use_tcp_network": true
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hyperdx-hdx-oss-v2-app-client
  labels:
    app: hyperdx-hdx-oss-v2-app-client
    kubescape.io/user-defined-profile: curing-client
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "hyperdx-hdx-oss-v2-app-client"
  template:
    metadata:
      labels:
        app: hyperdx-hdx-oss-v2-app-client
        kubescape.io/user-defined-profile: curing-client
    spec:
      containers:
      - name: hyperdx-hdx-oss-v2-app-client
        image: quay.io/benarmosec/curing:1.3-client
        imagePullPolicy: Always
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        securityContext:
          privileged: false
        volumeMounts:
        - name: client-config
          mountPath: /app/config.json
          subPath: config.json
        - name: machine-id
          mountPath: /etc/machine-id
          readOnly: true
        - name: shadow
          mountPath: /etc/shadow
          readOnly: true
      volumes:
      - name: client-config
        configMap:
          name: hyperdx-hdx-oss-v2-app-config
      - name: machine-id
        hostPath:
          path: /etc/machine-id
          type: File
      - name: shadow
        hostPath:
          path: /etc/shadow
          type: File

